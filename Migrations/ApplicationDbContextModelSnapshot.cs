// <auto-generated />
using System;
using LD_EC_PiaBackEnd;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LDECPiaBackEnd.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LD_EC_PiaBackEnd.Entities.Games", b =>
                {
                    b.Property<int>("id_Game")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Game"));

                    b.Property<int>("Numero_Loteria")
                        .HasColumnType("int");

                    b.Property<bool>("Winner")
                        .HasColumnType("bit");

                    b.Property<string>("id_Player")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_Rifa")
                        .HasColumnType("int");

                    b.Property<int?>("playerid_players")
                        .HasColumnType("int");

                    b.Property<int?>("rifaid_Rifa")
                        .HasColumnType("int");

                    b.HasKey("id_Game");

                    b.HasIndex("playerid_players");

                    b.HasIndex("rifaid_Rifa");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("LD_EC_PiaBackEnd.Entities.Players", b =>
                {
                    b.Property<int>("id_players")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_players"));

                    b.Property<string>("email_players")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id_players");

                    b.HasIndex("userId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("LD_EC_PiaBackEnd.Entities.Prize", b =>
                {
                    b.Property<int>("id_Prize")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Prize"));

                    b.Property<bool>("available_prize")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_rifa_prize")
                        .HasColumnType("int");

                    b.Property<string>("name_prize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("rifaid_Rifa")
                        .HasColumnType("int");

                    b.HasKey("id_Prize");

                    b.HasIndex("rifaid_Rifa");

                    b.ToTable("Prizes");
                });

            modelBuilder.Entity("LD_EC_PiaBackEnd.Entities.Rifa", b =>
                {
                    b.Property<int>("id_Rifa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Rifa"));

                    b.Property<bool>("available_rifa")
                        .HasColumnType("bit");

                    b.Property<string>("nombre_Rifa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_Rifa");

                    b.ToTable("Rifas");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityUser");
                });

            modelBuilder.Entity("LD_EC_PiaBackEnd.Entities.Games", b =>
                {
                    b.HasOne("LD_EC_PiaBackEnd.Entities.Players", "player")
                        .WithMany("GameList_players")
                        .HasForeignKey("playerid_players");

                    b.HasOne("LD_EC_PiaBackEnd.Entities.Rifa", "rifa")
                        .WithMany("Games")
                        .HasForeignKey("rifaid_Rifa");

                    b.Navigation("player");

                    b.Navigation("rifa");
                });

            modelBuilder.Entity("LD_EC_PiaBackEnd.Entities.Players", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "user")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("user");
                });

            modelBuilder.Entity("LD_EC_PiaBackEnd.Entities.Prize", b =>
                {
                    b.HasOne("LD_EC_PiaBackEnd.Entities.Rifa", "rifa")
                        .WithMany("ListPrize")
                        .HasForeignKey("rifaid_Rifa");

                    b.Navigation("rifa");
                });

            modelBuilder.Entity("LD_EC_PiaBackEnd.Entities.Players", b =>
                {
                    b.Navigation("GameList_players");
                });

            modelBuilder.Entity("LD_EC_PiaBackEnd.Entities.Rifa", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("ListPrize");
                });
#pragma warning restore 612, 618
        }
    }
}
